async function X(k){try{console.log("[generator] Starting MHTML generation");let f=await O(k);console.log("[generator] Collected resources:",f.length);let q=I(k);console.log("[generator] Created header:",q);let D=K(k);console.log("[generator] Main content length:",D.length);let z=f.map(N);console.log("[generator] Resource parts:",z.length);let w=[q,`--REPUBFOX-MHTML-BOUNDARY\r
${D}`,...z.map((F)=>`--REPUBFOX-MHTML-BOUNDARY\r
${F}`),`--REPUBFOX-MHTML-BOUNDARY--\r
`].join(`\r
`);return console.log("[generator] MHTML structure (first 500 chars):",w.substring(0,500)),new TextEncoder().encode(w)}catch(f){throw console.error("[generator] Error generating MHTML:",f),f}}function I(k){let f=k.location.href,q=["From: Saved by RepubFox","Subject: "+k.title,"Date: "+new Date().toUTCString(),"MIME-Version: 1.0",'Content-Type: multipart/related; boundary="REPUBFOX-MHTML-BOUNDARY"',"Snapshot-Content-Location: "+f].join(`\r
`);return console.log("[generator] Header created:",q),q+`\r
\r
`}function J(k){return k.split("").map((f)=>{let q=f.charCodeAt(0);if(q>127||f==="="||f==="."||f==="\r"||f===`
`)return"="+q.toString(16).toUpperCase().padStart(2,"0");return f}).join("")}function K(k){let f=k.location.href,q=`<meta name="mhtml-location" content="${f}">`,D=`<base href="${f}">`,z=k.documentElement.outerHTML;if(!z.includes("<head"))z=z.replace("<html","<html><head></head>");z=z.replace(/<head[^>]*>/,`$&${q}${D}`),z=`<!DOCTYPE html>
${z}`;let A=J(z),w=["Content-Type: text/html","Content-Transfer-Encoding: quoted-printable","Content-Location: "+f,"",A].join(`\r
`);return console.log("[generator] Main content created with Content-Type: text/html"),console.log("[generator] Content length:",A.length),w}function N(k){let q=[`Content-Type: ${k.contentType.includes("charset=")?k.contentType:`${k.contentType}; charset=utf-8`}`,"Content-Transfer-Encoding: base64","Content-Location: "+k.url,"",k.content].join(`\r
`);return console.log("[generator] Resource part created for:",k.url),q}async function O(k){let f=[],q=new Set,D=k.getElementsByTagName("img");for(let A of D){let w=A.src;if(w&&!w.startsWith("data:")&&!q.has(w))try{let F=await(await fetch(w)).blob(),G=(await V(F)).split(",")[1];if(G)f.push({url:w,content:G,contentType:F.type||"application/octet-stream"}),q.add(w)}catch(E){console.warn(`Failed to fetch image: ${w}`,E)}}let z=k.styleSheets;for(let A of z)if(A.href&&!q.has(A.href))try{let E=await(await fetch(A.href)).text();f.push({url:A.href,content:btoa(E),contentType:"text/css"}),q.add(A.href)}catch(w){console.warn(`Failed to fetch stylesheet: ${A.href}`,w)}return f}function V(k){return new Promise((f,q)=>{let D=new FileReader;D.onloadend=()=>f(D.result),D.onerror=q,D.readAsDataURL(k)})}export{X as generateMHTML};
